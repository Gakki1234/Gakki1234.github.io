<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>佘泽健的博客</title>
  <icon>https://www.gravatar.com/avatar/9fb0812e12dc217c2973c343d4a26683</icon>
  <subtitle>Just to be better！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/Gakki1234/"/>
  <updated>2018-10-11T15:04:51.544Z</updated>
  <id>https://github.com/Gakki1234/</id>
  
  <author>
    <name>SZJ</name>
    <email>shezejian@foxmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://github.com/Gakki1234/2018/10/11/python%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95/"/>
    <id>https://github.com/Gakki1234/2018/10/11/python实现常见算法/</id>
    <published>2018-10-11T14:58:27.517Z</published>
    <updated>2018-10-11T15:04:51.544Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;冒泡排序&lt;br&gt;原理：列表中两个相邻的数，如果前一个数比后一个数大，就做交换。一共需要遍历列表的次数是len(lst)-1&lt;br&gt;    　　　时间复杂度：O(n^2)&lt;br&gt;def bubble_sort(lst):&lt;br&gt;    for i in
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>06:Pod控制器应用进阶</title>
    <link href="https://github.com/Gakki1234/2018/10/07/06-Pod%E6%8E%A7%E5%88%B6%E5%99%A8%E5%BA%94%E7%94%A8%E8%BF%9B%E9%98%B6/"/>
    <id>https://github.com/Gakki1234/2018/10/07/06-Pod控制器应用进阶/</id>
    <published>2018-10-07T04:55:20.000Z</published>
    <updated>2018-10-07T05:01:43.612Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;资源配置清单：&lt;br&gt;    自主式Pod资源&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;资源的清单格式：
   
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>05:资源清单定义入门</title>
    <link href="https://github.com/Gakki1234/2018/10/07/05-%E8%B5%84%E6%BA%90%E6%B8%85%E5%8D%95%E5%AE%9A%E4%B9%89%E5%85%A5%E9%97%A8/"/>
    <id>https://github.com/Gakki1234/2018/10/07/05-资源清单定义入门/</id>
    <published>2018-10-07T04:54:52.000Z</published>
    <updated>2018-10-07T05:01:42.221Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;资源：对象&lt;br&gt;    workload：Pod,ReplicaSet,Deployment,StatefulSet,DaemonSet,Job,Cronjob,……&lt;br&gt;    服务发现及均衡：Service，Ingress，….&lt;br&gt;   
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>04:k8s应用入门</title>
    <link href="https://github.com/Gakki1234/2018/10/07/04-k8s%E5%BA%94%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <id>https://github.com/Gakki1234/2018/10/07/04-k8s应用入门/</id>
    <published>2018-10-07T04:54:23.000Z</published>
    <updated>2018-10-07T05:01:44.795Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;kubectl version&lt;br&gt;kubectl cluster-info&lt;br&gt;master：&lt;br&gt;       kubectl run nginx-deploy –image=nginx:1.14-alpine –port=80 –replicas=1
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python生成器</title>
    <link href="https://github.com/Gakki1234/2018/10/07/python%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <id>https://github.com/Gakki1234/2018/10/07/python生成器/</id>
    <published>2018-10-07T04:41:08.000Z</published>
    <updated>2018-10-07T04:52:48.682Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;.本集概览&lt;br&gt;1.生成器可以避免一次性生成整个列表&lt;br&gt;2.生成器函数的运行过程解析及状态保存&lt;br&gt;3.生成器表达式的使用方法&lt;br&gt;4.生成器表达式的可迭代特性&lt;br&gt;之前我们介绍了列表解析式，他的优点很多，比如运行速度快、编写简单，但是有一点我们不要忘了，他是一
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python参数传递</title>
    <link href="https://github.com/Gakki1234/2018/10/07/python/"/>
    <id>https://github.com/Gakki1234/2018/10/07/python/</id>
    <published>2018-10-07T04:36:09.000Z</published>
    <updated>2018-10-07T04:40:40.506Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;参数传递&lt;br&gt;在 python 中，类型属于对象，变量是没有类型的：&lt;br&gt;a=[1,2,3]&lt;br&gt;a=”Runoob”&lt;br&gt;以上代码中，[1,2,3] 是 List 类型，”Runoob” 是 String 类型，而变量 a
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/Gakki1234/2018/10/07/hello-world/"/>
    <id>https://github.com/Gakki1234/2018/10/07/hello-world/</id>
    <published>2018-10-07T02:22:11.540Z</published>
    <updated>2018-10-07T02:22:11.540Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a
        
      
    
    </summary>
    
    
  </entry>
  
</feed>
